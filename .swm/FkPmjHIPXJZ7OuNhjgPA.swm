{
    "id": "FkPmjHIPXJZ7OuNhjgPA",
    "name": "Events2",
    "task": {
        "dod": "In this unit you should Creare",
        "tests": [],
        "hints": []
    },
    "content": [
        {
            "type": "text",
            "text": "In this unit we will see how to run Javascript on events, and how to create custom events."
        },
        {
            "type": "snippet",
            "path": "src/components/TreeView.vue",
            "comments": [
                "In this step We can use the `v-on` or  in short `@` to let vue know what method to run on event.",
                "In the example here we have a text field where our user updates the text of an item. Once the user enter an input we would like to save the new state."
            ],
            "firstLineNumber": 11,
            "lines": [
                "         <v-text-field",
                "           v-if=\"!readOnly\"",
                "           class=\"text-field\"",
                "           v-model=\"item.name\"",
                "*          @input=\"updateInput\"",
                "           :append-icon=\"`mdi-trash-can-outline`\"",
                "           @click:append=\"deleteItem(item.id)\"",
                "         >",
                "         </v-text-field>"
            ]
        },
        {
            "type": "snippet",
            "path": "src/components/TreeView.vue",
            "comments": [],
            "firstLineNumber": 84,
            "lines": [
                "     updateItems(updatedItems = this.items) {",
                "       this.$emit(\"updateItems\", updatedItems);",
                "     },",
                "*    updateInput() {",
                "*      // triggered on input, should only update the local storage only when user finished typing (debouncing)",
                "*      if (this.timeout) clearTimeout(this.timeout);",
                "*      this.timeout = setTimeout(() => {",
                "*        this.updateItems();",
                "*      }, 1000);",
                "*    },",
                "     addEntry() {",
                "       const updatedItems = this.items;",
                "       updatedItems.push({"
            ]
        },
        {
            "type": "snippet",
            "path": "src/components/TreeView.vue",
            "comments": [
                "In this step The logic of saving the items is on the parent component - Home, We use `$emit` to create a new custom event with the name  `updateItems` and we can pass parameters to the even."
            ],
            "firstLineNumber": 81,
            "lines": [
                "       this.saveNextIdToLocalStorage(id + 1);",
                "       this.updateItems();",
                "     },",
                "*    updateItems(updatedItems = this.items) {",
                "*      this.$emit(\"updateItems\", updatedItems);",
                "*    },",
                "     updateInput() {",
                "       // triggered on input, should only update the local storage only when user finished typing (debouncing)",
                "       if (this.timeout) clearTimeout(this.timeout);"
            ]
        },
        {
            "type": "snippet",
            "path": "src/views/Home.vue",
            "comments": [
                "In the parent component we can use the `@` directive on the custom event."
            ],
            "firstLineNumber": 1,
            "lines": [
                " <template>",
                "   <v-container class=\"home\">",
                "*    <tree-view :read-only=\"!isHomePage\" :items=\"itemToDisplay\" :title=\"title\" @updateItems=\"updateItems($event)\" />",
                "   </v-container>",
                " </template>",
                " "
            ]
        },
        {
            "type": "text",
            "text": ""
        }
    ],
    "symbols": {},
    "file_version": "2.0.3",
    "meta": {
        "app_version": "0.6.8-1",
        "file_blobs": {
            "src/components/TreeView.vue": "6e57e15f210eeb9c1551f3ed5c51905f02b05c10",
            "src/views/Home.vue": "1bcb899084826a0a8e1e4fba4ed571517528eb73"
        }
    }
}
